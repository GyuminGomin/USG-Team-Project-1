{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gogos\\\\OneDrive\\\\Desktop\\\\\\uD50C\\uB7AB\\uD3FC \\uBE44\\uC9C0\\uB2C8\\uC2A4\\\\no1\\\\USG-Team-Project-1\\\\front\\\\src\\\\pages\\\\main\\\\StoresByType.jsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport StoreItem from \"./StoreItem\";\nimport dummydata from \"../../assets/data/dummydata.json\";\nimport MoreStoresBtnImgUrl from \"../../assets/image/ic_more_stores.png\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoresByType = props => {\n  _s();\n  const [maxItems, setMaxItems] = useState(3); // 한 줄에 보여줄 아이템의 최대 갯수\n\n  useEffect(() => {\n    const handleResize = () => {\n      const width = window.innerWidth;\n      if (width > 1000) {\n        setMaxItems(4);\n      } else if (width > 800) {\n        setMaxItems(3);\n      } else {\n        setMaxItems(2);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StoresByTypeContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StoreByTypeTopContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TypeTxt, {\n        children: props.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MoreStoresBtn, {\n        children: /*#__PURE__*/_jsxDEV(MoreStoresBtnImg, {\n          src: MoreStoresBtnImgUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StoreItemContainer, {\n      children: dummydata.filter(store => store.info_type === props.type).slice(0, maxItems).map((store, index) => /*#__PURE__*/_jsxDEV(StoreItem, {\n        img: \"\",\n        name: store.nickname,\n        rating: store.rating\n      }, store.reg_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(StoresByType, \"5U0EdZOk96uULOPJRejGwp52NTQ=\");\n_c = StoresByType;\nconst StoresByTypeContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 13px;\n`;\n_c2 = StoresByTypeContainer;\nconst StoreByTypeTopContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n_c3 = StoreByTypeTopContainer;\nconst StoreItemContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-left: 20px;\n    overflow: hidden;\n`;\n_c4 = StoreItemContainer;\nconst TypeTxt = styled.div`\n    font-size: 25px;\n    font-weight: 700;\n    margin-bottom: 8px;\n`;\n_c5 = TypeTxt;\nconst MoreStoresBtn = styled.button`\n    border: none;\n    background: none;\n`;\n_c6 = MoreStoresBtn;\nconst MoreStoresBtnImg = styled.img`\n    width: 30px;\n    height: 30px;\n`;\n_c7 = MoreStoresBtnImg;\nexport default StoresByType;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"StoresByType\");\n$RefreshReg$(_c2, \"StoresByTypeContainer\");\n$RefreshReg$(_c3, \"StoreByTypeTopContainer\");\n$RefreshReg$(_c4, \"StoreItemContainer\");\n$RefreshReg$(_c5, \"TypeTxt\");\n$RefreshReg$(_c6, \"MoreStoresBtn\");\n$RefreshReg$(_c7, \"MoreStoresBtnImg\");","map":{"version":3,"names":["styled","StoreItem","dummydata","MoreStoresBtnImgUrl","React","useState","useEffect","jsxDEV","_jsxDEV","StoresByType","props","_s","maxItems","setMaxItems","handleResize","width","window","innerWidth","addEventListener","removeEventListener","StoresByTypeContainer","children","StoreByTypeTopContainer","TypeTxt","type","fileName","_jsxFileName","lineNumber","columnNumber","MoreStoresBtn","MoreStoresBtnImg","src","StoreItemContainer","filter","store","info_type","slice","map","index","img","name","nickname","rating","reg_id","_c","div","_c2","_c3","_c4","_c5","button","_c6","_c7","$RefreshReg$"],"sources":["C:/Users/gogos/OneDrive/Desktop/플랫폼 비지니스/no1/USG-Team-Project-1/front/src/pages/main/StoresByType.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport StoreItem from \"./StoreItem\";\r\nimport dummydata from \"../../assets/data/dummydata.json\";\r\nimport MoreStoresBtnImgUrl from \"../../assets/image/ic_more_stores.png\"\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst StoresByType = (props) => {\r\n    const [maxItems, setMaxItems] = useState(3); // 한 줄에 보여줄 아이템의 최대 갯수\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            const width = window.innerWidth;\r\n\r\n            if (width > 1000) {\r\n                setMaxItems(4);\r\n            } else if (width > 800) {\r\n                setMaxItems(3);\r\n            } else {\r\n                setMaxItems(2);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        handleResize();\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <StoresByTypeContainer>\r\n            <StoreByTypeTopContainer>\r\n                <TypeTxt>{props.type}</TypeTxt>\r\n                <MoreStoresBtn><MoreStoresBtnImg src = {MoreStoresBtnImgUrl}/></MoreStoresBtn>\r\n            </StoreByTypeTopContainer>\r\n            <StoreItemContainer>\r\n                {dummydata.filter(store => store.info_type === props.type).slice(0, maxItems).map((store, index) => (\r\n                    <StoreItem key={store.reg_id} img=\"\" name={store.nickname} rating={store.rating}/>\r\n                ))}\r\n            </StoreItemContainer>\r\n        </StoresByTypeContainer>\r\n    );\r\n}\r\n\r\n\r\nconst StoresByTypeContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 13px;\r\n`;\r\n\r\nconst StoreByTypeTopContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst StoreItemContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-left: 20px;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst TypeTxt = styled.div`\r\n    font-size: 25px;\r\n    font-weight: 700;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nconst MoreStoresBtn = styled.button`\r\n    border: none;\r\n    background: none;\r\n`;\r\n\r\nconst MoreStoresBtnImg = styled.img`\r\n    width: 30px;\r\n    height: 30px;\r\n`;\r\n\r\nexport default StoresByType;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}