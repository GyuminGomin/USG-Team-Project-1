{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gogos\\\\OneDrive\\\\Desktop\\\\\\uD50C\\uB7AB\\uD3FC \\uBE44\\uC9C0\\uB2C8\\uC2A4\\\\no1\\\\USG-Team-Project-1\\\\front\\\\src\\\\pages\\\\main\\\\StoresOverview.jsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport StoreItem from \"./StoreItem\";\nimport StoresByType from \"./StoresByType\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoresOverview = props => {\n  _s();\n  const infoType = [\"명소\", \"카페\", \"음식점\", \"놀거리\"];\n  const [selectedInfoType, setSelcetedInfoType] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: infoType.map(type => {\n      if (selectedInfoType === null || selectedInfoType === type) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(StoresByType, {\n            type: type,\n            onMoreClick: () => setSelcetedInfoType(type),\n            selectedInfoType: selectedInfoType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), infoType.indexOf(type) !== infoType.length - 1 && selectedInfoType === null && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this)]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this);\n      } else {\n        return null;\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(StoresOverview, \"4nW7JnMILdQd6HOS6VTdGxBTx0k=\");\n_c = StoresOverview;\nconst Container = styled.div`\n    width: 100%;\n    margin-left: 20px;\n    margin-top: 30px;\n    margin-right: 40px;\n`;\n_c2 = Container;\nconst Divider = styled.div`\n    width: 100%;\n    height: 2px;\n    background-color: #61677A; // 원하는 색상으로 변경\n`;\n_c3 = Divider;\nexport default StoresOverview;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StoresOverview\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Divider\");","map":{"version":3,"names":["styled","StoreItem","StoresByType","React","useState","jsxDEV","_jsxDEV","StoresOverview","props","_s","infoType","selectedInfoType","setSelcetedInfoType","Container","children","map","type","onMoreClick","fileName","_jsxFileName","lineNumber","columnNumber","indexOf","length","Divider","_c","div","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/gogos/OneDrive/Desktop/플랫폼 비지니스/no1/USG-Team-Project-1/front/src/pages/main/StoresOverview.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport StoreItem from \"./StoreItem\";\r\nimport StoresByType from \"./StoresByType\";\r\nimport React, { useState } from 'react';\r\n\r\nconst StoresOverview = (props) => {\r\n    const infoType = [\"명소\", \"카페\", \"음식점\", \"놀거리\"];\r\n    const [selectedInfoType, setSelcetedInfoType] = useState(null);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {infoType.map((type) => {\r\n            if (selectedInfoType === null || selectedInfoType === type) {\r\n                return (\r\n                    <div key={type}>\r\n                        <StoresByType type={type} onMoreClick={() => setSelcetedInfoType(type)} selectedInfoType={selectedInfoType}/>\r\n                        {\r\n                            infoType.indexOf(type) !== infoType.length - 1 && selectedInfoType === null &&\r\n                            <Divider />\r\n                        }\r\n                    </div>\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        })}\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    margin-left: 20px;\r\n    margin-top: 30px;\r\n    margin-right: 40px;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: #61677A; // 원하는 색상으로 변경\r\n`;\r\n\r\nexport default StoresOverview;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;EAC3C,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAG9D,oBACIE,OAAA,CAACO,SAAS;IAAAC,QAAA,EACLJ,QAAQ,CAACK,GAAG,CAAEC,IAAI,IAAK;MACxB,IAAIL,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAKK,IAAI,EAAE;QACxD,oBACIV,OAAA;UAAAQ,QAAA,gBACIR,OAAA,CAACJ,YAAY;YAACc,IAAI,EAAEA,IAAK;YAACC,WAAW,EAAEA,CAAA,KAAML,mBAAmB,CAACI,IAAI,CAAE;YAACL,gBAAgB,EAAEA;UAAiB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,EAEzGX,QAAQ,CAACY,OAAO,CAACN,IAAI,CAAC,KAAKN,QAAQ,CAACa,MAAM,GAAG,CAAC,IAAIZ,gBAAgB,KAAK,IAAI,iBAC3EL,OAAA,CAACkB,OAAO;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GAJTL,IAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMT,CAAC;MAEd,CAAC,MAAM;QACH,OAAO,IAAI;MACf;IACJ,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAES,CAAC;AAEpB,CAAC;AAAAZ,EAAA,CAzBKF,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AA2BpB,MAAMM,SAAS,GAAGb,MAAM,CAAC0B,GAAI;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALId,SAAS;AAOf,MAAMW,OAAO,GAAGxB,MAAM,CAAC0B,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAACE,GAAA,GAJIJ,OAAO;AAMb,eAAejB,cAAc;AAAC,IAAAkB,EAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}