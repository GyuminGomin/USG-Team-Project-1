[{"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\index.js":"1","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\App.js":"2","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\reportWebVitals.js":"3","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\SignUp.js":"4","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\Login.js":"5","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\main\\Home.jsx":"6","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\detail\\DetailPage.js":"7","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\detail\\PopupWithInput.js":"8","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\main\\Header.jsx":"9","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\main\\StoreItem.jsx":"10","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\main\\StoresOverview.jsx":"11","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\components\\RegionNavigation.jsx":"12","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\components\\AppRouter.js":"13","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\components\\BtnLogo.jsx":"14","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\components\\SearchBox.jsx":"15","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\main\\StoresByType.jsx":"16","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\Auth\\SignInPage.js":"17","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\store\\Register.js":"18","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\Auth\\SignUpPage.js":"19","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\store\\RegisterUpdate.js":"20","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\Auth\\AuthAPI.js":"21"},{"size":552,"mtime":1706671225227,"results":"22","hashOfConfig":"23"},{"size":1499,"mtime":1706676775165,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1706671225299,"results":"25","hashOfConfig":"23"},{"size":1520,"mtime":1706671225178,"results":"26","hashOfConfig":"23"},{"size":1321,"mtime":1706671225174,"results":"27","hashOfConfig":"23"},{"size":1202,"mtime":1706671225260,"results":"28","hashOfConfig":"23"},{"size":5160,"mtime":1706671225251,"results":"29","hashOfConfig":"23"},{"size":5595,"mtime":1706671709511,"results":"30","hashOfConfig":"23"},{"size":677,"mtime":1706671225256,"results":"31","hashOfConfig":"23"},{"size":1393,"mtime":1706671225262,"results":"32","hashOfConfig":"23"},{"size":1910,"mtime":1706671225267,"results":"33","hashOfConfig":"23"},{"size":5655,"mtime":1706671225215,"results":"34","hashOfConfig":"23"},{"size":1235,"mtime":1706671225204,"results":"35","hashOfConfig":"23"},{"size":546,"mtime":1706671225208,"results":"36","hashOfConfig":"23"},{"size":810,"mtime":1706671225218,"results":"37","hashOfConfig":"23"},{"size":3380,"mtime":1706671225265,"results":"38","hashOfConfig":"23"},{"size":2600,"mtime":1706684822034,"results":"39","hashOfConfig":"23"},{"size":4405,"mtime":1706683873018,"results":"40","hashOfConfig":"23"},{"size":5084,"mtime":1706684820228,"results":"41","hashOfConfig":"23"},{"size":4993,"mtime":1706672300922,"results":"42","hashOfConfig":"23"},{"size":875,"mtime":1706672148498,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"7ymibt",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"47"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\index.js",[],[],["115","116","117","118","119","120"],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\App.js",["121","122","123"],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\reportWebVitals.js",[],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\SignUp.js",[],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\Login.js",[],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\main\\Home.jsx",["124"],[],"import Header from \"./Header\";\r\nimport RegionNav from \"../../components/RegionNavigation\"\r\nimport StoreItem from \"../main/StoreItem\";\r\nimport StoresOverview from \"./StoresOverview\";\r\nimport styled from \"styled-components\";\r\nimport React, { useState } from 'react';\r\n\r\nconst Home = () => {\r\n    const [selectedInfoType, setSelectedInfoType] = useState(null);\r\n    const [selectedCityOrDistrict, setSelectedCityOrDistrict] = useState(null);\r\n\r\n    const resetSelectedInfo = () => {\r\n        setSelectedInfoType(null);\r\n        setSelectedCityOrDistrict(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header resetSelectedInfo={resetSelectedInfo}/>\r\n            <ContentContainer>\r\n                <RegionNav selectedCityOrDistrict={selectedCityOrDistrict} setSelectedCityOrDistrict={setSelectedCityOrDistrict}/>\r\n                <StoresOverview type=\"카페\" selectedCityOrDistrict={selectedCityOrDistrict} selectedInfoType={selectedInfoType} setSelectedInfoType={setSelectedInfoType}/>\r\n            </ContentContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ContentContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border: 1px #99D98C solid;\r\n`;\r\n\r\nexport default Home;","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\detail\\DetailPage.js",["125","126","127","128"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PopupWithInput from './PopupWithInput';\r\nimport styled from 'styled-components';\r\nimport './DetailPage.css';\r\nconst styles = {\r\n  table: {\r\n    width: '100%',\r\n    borderCollapse: 'collapse',\r\n  },\r\n  tableHead: {\r\n    backgroundColor: '#D1E8C4',\r\n  },\r\n  tableCell: {\r\n    padding: '12px 16px',\r\n  },\r\n  \r\n};\r\n\r\nexport default function DetailPage() {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] =  useState(false);\r\n  const Star = ({ selected, starSize }) => (\r\n    <span\r\n      style={{\r\n        cursor: 'default', // 클릭할 수 없도록 커서 비활성화\r\n        color: selected ? 'orange' : 'gray',\r\n        fontSize: starSize || '24px',\r\n      }}\r\n    >\r\n      &#9733;\r\n    </span>\r\n  );\r\n  function handleClick() {\r\n    updateInterest();\r\n  }\r\n\r\n  async function updateInterest() {\r\n    const url = 'http://localhost:3001/myinterest'; // PUT 요청을 보낼 엔드포인트\r\n    const data = {  interest: true  }; // 업데이트할 데이터\r\n    if (!isLoading) {\r\n      setIsLoading(true);\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        alert('Network response was not ok');\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      alert('관심장소가 추가되었습니다');\r\n      setIsLoading(false);\r\n      console.log('Interest updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating interest:', error);\r\n    }\r\n  }\r\n  }\r\n\r\n  const handleReviewAdded = () => {\r\n    fetchData(); // 리뷰 추가 후에 데이터를 다시 가져와서 업데이트\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(); // 초기 데이터 가져오기\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    fetch(\"http://localhost:3001/detailpage\")\r\n      .then(res => res.json())\r\n      .then(data => setData(data))\r\n      .catch(error => console.error(\"Error fetching data:\", error));\r\n  };\r\n\r\n  const customStyles = {\r\n    closeButton: {\r\n        alignSelf: 'flex-end', \r\n        marginTop: '10px',\r\n      },\r\n  };\r\n\r\n  if (data.length === 0) {\r\n    return <span >Loading...</span>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data.map((item) => (\r\n        <div className=\"detail\" key={item.id}>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          {item.image && <img src={`data:image/png;base64,${item.image}`} alt=\"Item Image\" style={{ width: '700px', height: '500px', marginRight: '50px'}}/>}\r\n          <div>\r\n            <h1>{item.name}</h1>\r\n            <button onClick={handleClick}>+ 관심장소</button>\r\n            <p>({item.group})</p>\r\n            <p>연락처: {item.contact}</p>\r\n            <p>주소: {item.address}</p>\r\n            <p>{item.detail}</p>\r\n            <p>평점: {item.averagegrade}</p>\r\n          </div>\r\n          </div>\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n  <h3 style={{ marginRight: '1rem' }}>리뷰 ({item.review.length}개)</h3>\r\n  <div style={{ marginLeft: 'auto' }}>\r\n    <PopupWithInput onReviewAdded={handleReviewAdded} />\r\n  </div>\r\n</div>\r\n<div style={{ paddingTop: '5px' }}>\r\n<table style={styles.table}>\r\n  <thead style={ styles.tableHead }>\r\n    <tr>\r\n    <th style={{...styles.tableCell, width: '10%'}}>목록</th>\r\n      <th style={{...styles.tableCell, width: '20%'}}>Email</th>\r\n      <th style={{...styles.tableCell, width: '30%'}}>내용</th>\r\n      <th style={{...styles.tableCell, width: '20%'}}>평점</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {item.review.map((review) => (\r\n      <tr key={review.id} style={{ borderBottom: item.review.id ? '1px solid #D5E8CE' : 'none' }}>\r\n        <td style={{...styles.tableCell, width: '10%'}}>{review.id}</td>\r\n        <td style={{...styles.tableCell, width: '20%'}}>{review.email}</td>\r\n        <td style={{...styles.tableCell, width: '30%'}}>\r\n  <div style={{ display: 'flex', alignItems: 'center' }}>\r\n    {review.image && (\r\n      <img src={`data:image/png;base64,${review.image}`} alt=\"Review Image\" style={{ width: '300px', height: '200px', marginRight: '10px' }}/>\r\n    )}\r\n    <div>{review.detail}</div>\r\n  </div>\r\n</td>\r\n        <td style={{...styles.tableCell, width: '20%'}}>\r\n          {[...Array(review.grade)].map((_, index) => (\r\n            <Star\r\n              key={index}\r\n              selected={true} // review.grade로 지정된 수만큼의 별을 선택 상태로 설정\r\n              starSize={customStyles.closeButton}\r\n            />\r\n          ))}\r\n          {[...Array(5 - review.grade)].map((_, index) => (\r\n            <Star\r\n              key={review.grade + index}\r\n              selected={false} // 나머지 별은 선택되지 않은 상태로 설정\r\n              starSize={customStyles.closeButton}\r\n            />\r\n          ))} {review.grade}\r\n        </td>\r\n      </tr>\r\n    ))}\r\n  </tbody>\r\n</table>\r\n</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\detail\\PopupWithInput.js",["129","130","131","132","133"],[],"import React, { useState,useEffect,useRef } from 'react';\r\nimport Modal from 'react-modal';\r\nimport styled from 'styled-components';\r\nfunction PopupWithInput({ onReviewAdded }) {\r\n\r\nconst [data, setData] = useState([]);\r\nconst [isLoading, setIsLoading] =  useState(false);\r\nconst [rating, setRating] = useState(0);\r\nconst [modalIsOpen, setModalIsOpen] = useState(false);\r\nconst [inputValue, setInputValue] = useState('');\r\n\r\nconst emailRef = useRef(null);\r\nconst detailRef = useRef(null);\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: auto;\r\n`;\r\nconst [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n\r\nuseEffect(() => {\r\n    fetch(\"http://localhost:3001/detailpage\")\r\n      .then(res => res.json())\r\n      .then(data => setData(data))\r\n      .catch(error => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n  \r\n    if (!isLoading) {\r\n      setIsLoading(true);\r\n  \r\n      try {\r\n        const updatedData = { ...data }; // 데이터 복사\r\n  \r\n        // 새 리뷰 데이터 생성\r\n        const newReview = {\r\n          id: updatedData[0].review.length + 1,\r\n          email: 'abc@abcd',\r\n          detail: detailRef.current.value,\r\n          grade: rating,\r\n        }; \r\n  \r\n        // 리뷰를 데이터에 추가\r\n        updatedData[0].review.push(newReview);\r\n  \r\n        // 이미지를 선택한 경우에만 처리\r\n        if (selectedFile) {\r\n          // 이미지를 Base64로 변환\r\n          const imageBase64 = await convertImageToBase64(selectedFile);\r\n  \r\n          // 이미지 데이터를 JSON에 추가\r\n          newReview.image = imageBase64;\r\n        }\r\n  \r\n        // 서버에 JSON 데이터 전송\r\n        const response = await fetch(`http://localhost:3001/detailpage/${updatedData[0].id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(updatedData[0]),\r\n        });\r\n  \r\n        if (response.ok) {\r\n          alert('작성이 완료 되었습니다');\r\n          setIsLoading(false);\r\n          closeModal();\r\n          onReviewAdded(); // 부모 컴포넌트에 리뷰 추가 완료를 알림\r\n        } else {\r\n          const errorMessage = await response.text();\r\n          alert(`작성을 실패하였습니다: ${errorMessage}`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // 이미지를 Base64로 변환하는 함수\r\n  function convertImageToBase64(imageFile) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n  \r\n      reader.onload = () => {\r\n        resolve(reader.result.split(',')[1]); // Base64 문자열에서 실제 데이터 부분 추출\r\n      };\r\n  \r\n      reader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n  \r\n      reader.readAsDataURL(imageFile);\r\n    });\r\n  }\r\n\r\n  const Star = ({ selected, onClick, starSize }) => (\r\n    <span\r\n      style={{ cursor: 'pointer', color: selected ? 'orange' : 'gray',\r\n      fontSize: starSize || '24px', }}\r\n      onClick={onClick}\r\n    >\r\n      &#9733;\r\n    </span>\r\n  );\r\n\r\n  const handleStarClick = (selectedRating) => {\r\n    setRating(selectedRating);\r\n  };\r\n\r\n  const handleConfirmClick = () => {\r\n    // 별점 선택이 완료되었을 때 할 작업 추가\r\n    console.log('Selected Rating:', rating);\r\n    \r\n    closeModal();\r\n  };\r\n\r\n  const openModal = () => {\r\n    setModalIsOpen(true);\r\n    setInputValue(''); // 팝업이 열릴 때 입력값 초기화\r\n    setRating(0);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const customStyles = {\r\n    content: {\r\n      width: '50%', \r\n      height: '40%',\r\n      top: '50%', \r\n      left: '50%', \r\n      transform: 'translate(-50%, -50%)', \r\n    },\r\n    inputContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n    textarea: {\r\n        width: '100%',\r\n        height: '200px', \r\n        marginBottom: '10px'\r\n      },\r\n    closeButton: {\r\n        alignSelf: 'flex-end', \r\n        marginTop: '10px',\r\n      },\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"button-container\">\r\n  <button onClick={openModal}>리뷰 작성</button>\r\n</div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Popup with Input\"\r\n        style={customStyles}\r\n      >\r\n        <h2>리뷰 작성하기{data.id}</h2>\r\n        <div style={customStyles.inputContainer}>\r\n          <textarea\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            style={customStyles.textarea}\r\n            ref={detailRef}\r\n          /></div>\r\n          <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n         <div style={{ display: 'flex', alignItems: 'center' }}>\r\n  <a>평점</a>\r\n  <div style={{ display: 'flex', alignItems: 'center' }}>\r\n  {[1, 2, 3, 4, 5].map((star) => (\r\n        <Star\r\n          key={star}\r\n          selected={star <= rating}\r\n          onClick={() => handleStarClick(star)}\r\n          starSize={customStyles.closeButton}\r\n        />\r\n      ))}\r\n      <button onClick={onSubmit}>완료</button>\r\n      </div>\r\n</div>\r\n      </Modal>\r\n      \r\n    </div>\r\n  );\r\n}\r\nexport default PopupWithInput;","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\main\\Header.jsx",["134","135","136"],[],"import styled from \"styled-components\";\r\nimport BtnLogo from \"../../components/BtnLogo\";\r\nimport SearchBox from \"../../components/SearchBox\";\r\nimport AppRouter from \"../../components/AppRouter\";\r\nimport LogoImage from '../../assets/image/logo.png';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <img src={LogoImage} style={{ margin:'20px 20px', width: '175px', height: '79px' }} alt=\"logo\"/>\r\n            {/* 상단 네비게이션 */}\r\n            <AppRouter resetSelectedInfo={props.resetSelectedInfo}/> \r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\main\\StoreItem.jsx",[],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\main\\StoresOverview.jsx",["137","138"],[],"import styled from \"styled-components\";\r\nimport StoreItem from \"./StoreItem\";\r\nimport StoresByType from \"./StoresByType\";\r\nimport React, { useState } from 'react';\r\n\r\nconst StoresOverview = (props) => {\r\n    const infoType = [\"명소\", \"카페\", \"음식점\", \"놀거리\"];\r\n\r\n    const selectInfoType = (type) => {\r\n        // onSelectRegion(area);\r\n        props.setSelectedInfoType(type);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                (props.selectedCityOrDistrict !== null && \r\n                <CityOrDistrictTxt>{props.selectedCityOrDistrict}</CityOrDistrictTxt>)\r\n            }       \r\n            {    \r\n                infoType.map((type) => {\r\n                if (props.selectedInfoType === null || props.selectedInfoType === type) {\r\n                    return (\r\n                        <div key={type}>\r\n                            <StoresByType type={type} onMoreClick={() => selectInfoType(type)} selectedInfoType={props.selectedInfoType} selectedCityOrDistrict={props.selectedCityOrDistrict}/>\r\n                            {\r\n                                infoType.indexOf(type) !== infoType.length - 1 && props.selectedInfoType === null &&\r\n                                <Divider />\r\n                            }\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return null;\r\n                }\r\n            })}\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    margin-left: 20px;\r\n    margin-top: 10px;\r\n    margin-right: 40px;\r\n`;\r\n\r\nconst CityOrDistrictTxt = styled.div`\r\n    font-size: 30px;\r\n    font-weight: 900;\r\n    margin-bottom: 8px;\r\n    margin-top: 13px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: #61677A; // 원하는 색상으로 변경\r\n`;\r\n\r\nexport default StoresOverview;\r\n","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\components\\RegionNavigation.jsx",[],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\components\\AppRouter.js",["139","140"],[],"// src/components/AppRouter2.js\r\nimport React from 'react';\r\nimport { Routes, Route, Link } from 'react-router-dom';\r\n\r\nconst AppRouter = (props) => {\r\n  return (\r\n    <div>\r\n      <style>\r\n        {`\r\n          a {\r\n            text-decoration: none;\r\n            color: #333;\r\n          }\r\n          a:hover {\r\n            font-weight: bold;\r\n          }\r\n        `}\r\n      </style>\r\n\r\n      <nav>\r\n        <ul style={{ listStyleType: 'none', display: 'flex', marginRight: '20px', padding: 0 }}>\r\n          <li style={{ marginRight: '10px' }}>\r\n            <Link to=\"/\" onClick={props.resetSelectedInfo}>Home</Link>\r\n          </li>\r\n          <li style={{ marginRight: '10px' }}> | </li>\r\n          <li style={{ marginRight: '10px' }}>\r\n            <Link to=\"/mypage\">마이페이지</Link>\r\n          </li>\r\n          <li style={{ marginRight: '10px' }}> | </li>\r\n          <li>\r\n            <Link to=\"/logout\">로그아웃</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      {/* <Routes>\r\n        <Route path=\"/home\" element={<Home />} />\r\n        <Route path=\"/mypage\" element={<Mypage />} />\r\n        <Route path=\"/logout\" element={<Logout />} />\r\n      </Routes> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppRouter;","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\components\\BtnLogo.jsx",[],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\components\\SearchBox.jsx",["141"],[],"import styled from \"styled-components\";\r\nimport SearchImage from '../assets/image/search.png';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SearchBox = () => {\r\n    return (\r\n        <Container>\r\n            <Input placeholder=\"가게이름을 검색해주세요\"/>\r\n            <Btn><ImgSearch src={SearchImage} alt=\"search\"/></Btn>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.span`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 450px;\r\n    height: 46px;\r\n    margin: 0px 0px 3px 0;\r\n    padding: 0px;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n    background: none;\r\n    border: none;\r\n    margin: 0px 0 0 -5px;\r\n    padding: 0px;\r\n`;\r\n\r\nconst ImgSearch = styled.img`\r\n    width: 50px;\r\n    height: 50px;\r\n`;\r\n\r\nexport default SearchBox;\r\n","C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\main\\StoresByType.jsx",[],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\Auth\\SignInPage.js",["142","143","144"],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\store\\Register.js",[],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\Auth\\SignUpPage.js",["145","146","147","148","149"],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\pages\\store\\RegisterUpdate.js",[],[],"C:\\Users\\김지은\\Documents\\usg-team-project-1\\USG-Team-Project-1\\front\\src\\Auth\\AuthAPI.js",[],[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":2,"column":50,"nodeType":"164","messageId":"165","endLine":2,"endColumn":54},{"ruleId":"162","severity":1,"message":"166","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":13},{"ruleId":"162","severity":1,"message":"167","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":14},{"ruleId":"162","severity":1,"message":"168","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"169","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":19},{"ruleId":"162","severity":1,"message":"170","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":96,"column":26,"nodeType":"173","endLine":96,"endColumn":157},{"ruleId":"171","severity":1,"message":"172","line":131,"column":7,"nodeType":"173","endLine":131,"endColumn":143},{"ruleId":"162","severity":1,"message":"174","line":12,"column":7,"nodeType":"164","messageId":"165","endLine":12,"endColumn":15},{"ruleId":"162","severity":1,"message":"175","line":15,"column":7,"nodeType":"164","messageId":"165","endLine":15,"endColumn":16},{"ruleId":"162","severity":1,"message":"176","line":19,"column":7,"nodeType":"164","messageId":"165","endLine":19,"endColumn":13},{"ruleId":"162","severity":1,"message":"177","line":121,"column":9,"nodeType":"164","messageId":"165","endLine":121,"endColumn":27},{"ruleId":"178","severity":1,"message":"179","line":189,"column":3,"nodeType":"173","endLine":189,"endColumn":6},{"ruleId":"162","severity":1,"message":"170","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":14},{"ruleId":"162","severity":1,"message":"180","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":15},{"ruleId":"162","severity":1,"message":"181","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"168","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":17},{"ruleId":"162","severity":1,"message":"182","line":4,"column":17,"nodeType":"164","messageId":"165","endLine":4,"endColumn":25},{"ruleId":"162","severity":1,"message":"183","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":16},{"ruleId":"162","severity":1,"message":"184","line":3,"column":18,"nodeType":"164","messageId":"165","endLine":3,"endColumn":23},{"ruleId":"162","severity":1,"message":"185","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":21},{"ruleId":"162","severity":1,"message":"186","line":6,"column":35,"nodeType":"164","messageId":"165","endLine":6,"endColumn":46},{"ruleId":"162","severity":1,"message":"187","line":6,"column":48,"nodeType":"164","messageId":"165","endLine":6,"endColumn":57},{"ruleId":"162","severity":1,"message":"188","line":34,"column":11,"nodeType":"164","messageId":"165","endLine":34,"endColumn":19},{"ruleId":"162","severity":1,"message":"186","line":6,"column":35,"nodeType":"164","messageId":"165","endLine":6,"endColumn":46},{"ruleId":"162","severity":1,"message":"187","line":6,"column":48,"nodeType":"164","messageId":"165","endLine":6,"endColumn":57},{"ruleId":"162","severity":1,"message":"189","line":6,"column":59,"nodeType":"164","messageId":"165","endLine":6,"endColumn":71},{"ruleId":"162","severity":1,"message":"190","line":6,"column":73,"nodeType":"164","messageId":"165","endLine":6,"endColumn":90},{"ruleId":"162","severity":1,"message":"191","line":34,"column":11,"nodeType":"164","messageId":"165","endLine":34,"endColumn":19},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["192"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'SignUp' is defined but never used.","'StoreItem' is defined but never used.","'useParams' is defined but never used.","'styled' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'emailRef' is assigned a value but never used.","'Container' is assigned a value but never used.","'Button' is assigned a value but never used.","'handleConfirmClick' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'BtnLogo' is defined but never used.","'SearchBox' is defined but never used.","'useState' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'useNavigate' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'onSignin' is assigned a value but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'onSignup' is assigned a value but never used.","no-object-constructor"]